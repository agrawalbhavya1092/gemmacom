# Generated by Django 2.0 on 2018-08-20 09:29

from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_column='CG_UM_EMAIL', max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, db_column='CG_UM_FIRST_NAME', max_length=255, verbose_name='first name')),
                ('pref_first_name', models.CharField(blank=True, db_column='CG_UM_PREF_FIRST_NAME', max_length=255, verbose_name='preferred first name')),
                ('emp_id', models.CharField(blank=True, db_column='CG_UM_ALTER_EMPLID', max_length=10)),
                ('last_name', models.CharField(blank=True, db_column='CG_UM_LAST_NAME', max_length=255, verbose_name='last name')),
                ('pref_last_name', models.CharField(blank=True, db_column='CG_UM_PREF_LAST_NAME', max_length=255, verbose_name='preferred last name')),
                ('middle_name', models.CharField(blank=True, db_column='CG_UM_MIDDLE_NAME', max_length=255, verbose_name='middle name')),
                ('title', models.CharField(blank=True, choices=[('Mr.', 'Mr'), ('Mrs.', 'Mrs'), ('Ms.', 'Ms')], db_column='CG_UM_TITLE', max_length=5, verbose_name='title')),
                ('pref_language', models.CharField(blank=True, db_column='CG_UM_PREF_LANG', max_length=3, verbose_name='preferred language')),
                ('active', models.BooleanField(db_column='CG_UM_STATUS', default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.IntegerField(db_column='CG_ROLE_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='CG_ROLE_NAME', max_length=255, unique=True, verbose_name='name')),
                ('status', models.CharField(blank=True, db_column='CG_ROLE_STATUS', max_length=20, verbose_name='status')),
                ('description', models.TextField(blank=True, db_column='CG_ROLE_DESCRIPTION', verbose_name='description')),
            ],
            options={
                'db_table': 'Role',
            },
            managers=[
                ('objects', users.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.IntegerField(db_column='CG_PERMISSION_ID', primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(db_column='CG_PERMISSION_NAME', max_length=255, verbose_name='name')),
                ('status', models.CharField(blank=True, db_column='CG_PERMISSION_STATUS', max_length=20, verbose_name='status')),
                ('description', models.TextField(blank=True, db_column='CG_PERMISSION_DESCRIPTION', verbose_name='description')),
                ('codename', models.CharField(max_length=100, verbose_name='codename')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
            ],
            options={
                'db_table': 'Permissions',
                'ordering': ('content_type__app_label', 'content_type__model', 'codename'),
            },
            managers=[
                ('objects', users.models.PermissionManager()),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='users.Permissions', verbose_name='permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='permissions',
            unique_together={('content_type', 'codename')},
        ),
    ]
